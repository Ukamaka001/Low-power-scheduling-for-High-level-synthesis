
@article{zhang_high-level_2015,
	title = {High-level {Synthesis} for {Low}-power {Design}},
	volume = {8},
	issn = {1882-6687},
	url = {https://www.jstage.jst.go.jp/article/ipsjtsldm/8/0/8_12/_article},
	doi = {10.2197/ipsjtsldm.8.12},
	language = {en},
	number = {0},
	urldate = {2023-05-26},
	journal = {IPSJ Transactions on System LSI Design Methodology},
	author = {Zhang, Zhiru and Chen, Deming and Dai, Steve and Campbell, Keith},
	year = {2015},
	pages = {12--25},
	file = {Zhang et al. - 2015 - High-level Synthesis for Low-power Design.pdf:C\:\\Users\\Fredi\\Zotero\\storage\\32X9QPIW\\Zhang et al. - 2015 - High-level Synthesis for Low-power Design.pdf:application/pdf},
}

@incollection{raghunathan_high-level_1998,
	address = {Boston, MA},
	title = {High-{Level} {Synthesis} for {Low} {Power}},
	isbn = {978-1-4615-5433-2},
	url = {https://doi.org/10.1007/978-1-4615-5433-2_5},
	abstract = {High-level synthesis (also called behavioral synthesis or architectural synthesis) refers to the process of transforming a functional or behavioral specification of a design into a structural RTL implementation. A typical high-level synthesis process involves several subtasks including behavioral transformations, module selection, clock period selection, scheduling, and resource sharing, and RTL circuit generation. High-level synthesis has a large impact on power consumption, which, if properly exploited, can lead to large power savings. This chapter analyzes the effect of various high-level synthesis subtasks on power, and presents various techniques that can be used to optimize power consumption during high-level synthesis.},
	language = {en},
	urldate = {2023-05-26},
	booktitle = {High-{Level} {Power} {Analysis} and {Optimization}},
	publisher = {Springer US},
	author = {Raghunathan, Anand and Jha, Niraj K. and Dey, Sujit},
	editor = {Raghunathan, Anand and Jha, Niraj K. and Dey, Sujit},
	year = {1998},
	doi = {10.1007/978-1-4615-5433-2_5},
	keywords = {Clock Cycle, Module Selection, Power Consumption, Resource Sharing, Supply Voltage},
	pages = {115--153},
}

@incollection{kleinjohann_integration_2002,
	address = {Boston, MA},
	title = {Integration of {Low} {Power} {Analysis} into {High}-{Level} {Synthesis}},
	volume = {91},
	isbn = {978-1-4757-4937-3 978-0-387-35599-3},
	url = {http://link.springer.com/10.1007/978-0-387-35599-3_20},
	language = {en},
	urldate = {2023-05-26},
	booktitle = {Design and {Analysis} of {Distributed} {Embedded} {Systems}},
	publisher = {Springer US},
	author = {Rettberg, Achim and Kleinjohann, Bernd and Rammig, Franz J.},
	editor = {Kleinjohann, Bernd and Kim, K. H. and Kleinjohann, Lisa and Rettberg, Achim},
	year = {2002},
	doi = {10.1007/978-0-387-35599-3_20},
	note = {Series Title: IFIP Advances in Information and Communication Technology},
	pages = {195--204},
	file = {Rettberg et al. - 2002 - Integration of Low Power Analysis into High-Level .pdf:C\:\\Users\\Fredi\\Zotero\\storage\\HFZZ8WH3\\Rettberg et al. - 2002 - Integration of Low Power Analysis into High-Level .pdf:application/pdf},
}

@misc{noauthor_achim_nodate,
	title = {Achim {Rettberg} - {Low} {Power} {Driven} {High}-{Level} {Synthesis} for {Dedicated} {Architectures}},
	url = {http://www.shaker.de/de/content/catalogue/index.asp?lang=de&ID=8&ISBN=978-3-8322-5892-4},
	abstract = {The high-level synthesis
approach is especially developed for a bitserial architecture. We addressed a specific
analysis technique within the scheduling task
of high-level synthesis. The analysis technique
allows the determination of dedicated turn-on
and turn-off mechanism by design partitioning.
Therefore, the optimisation of power
consumption is simultaneously improved with
the design delay for the target architecture.},
	urldate = {2023-05-27},
	file = {Snapshot:C\:\\Users\\Fredi\\Zotero\\storage\\DC399BEB\\index.html:text/html},
}

@book{rettberg_low_2007,
	address = {Aachen},
	series = {C-{LAB} {Publication}},
	title = {Low {Power} {Driven} {High}-{Level} {Synthesis} for {Dedicated} {Architectures}},
	volume = {22},
	isbn = {978-3-8322-5892-4},
	publisher = {Shaker Verlag},
	author = {Rettberg, Achim},
	year = {2007},
}

@misc{noauthor_handbook_nodate,
	title = {Handbook of {HardwareSoftware} {Codesign} ({Soonhoi} {Ha}, {Jürgen} {Teich}) (z-lib.org).pdf},
	url = {https://www.dropbox.com/s/186osug7mv1e3ix/Handbook%20of%20HardwareSoftware%20Codesign%20%28Soonhoi%20Ha%2C%20J%C3%BCrgen%20Teich%29%20%28z-lib.org%29.pdf?dl=0},
	abstract = {Based on the formalization metamodels provide, models can be incrementally transformed and combined to create more refined models for particular design tasks. IP-XACT and UML/SysML can be utilized within the scope of metamodeling.},
	language = {en},
	urldate = {2023-05-29},
	journal = {Dropbox},
	file = {Snapshot:C\:\\Users\\Fredi\\Zotero\\storage\\RW4HN8WV\\Handbook of HardwareSoftware Codesign (Soonhoi Ha, Jürgen Teich) (z-lib.org).html:text/html},
}
